#! /usr/bin/env python3
# -*- coding: utf-8 -*-

# getrepodata file is part of spman

# Copyright 2016 MyRequiem <mrvladislavovich@gmail.com>
# All rights reserved

# spman - Slackware package manager
# Home page: https://github.com/MyRequiem/spman

# Spman is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

"""
Get data from the repository
"""

from spman.maindata import MainData


class GetRepoData(object):
    """
    get data from the repository
    """
    def __init__(self):
        self.meta = MainData()
        self.spman_conf = self.meta.get_spman_conf()
        self.rdata = {
            # date and time of the last update on the server
            'lupd': ''
        }

    def start(self, reponame):
        """
        docstring
        """
        if reponame == 'sbo':
            # if repository name is 'sbo', last date update
            # is only available in the log file
            dfile = '{0}{1}/ChangeLog.txt'.format(self.spman_conf['LOGS_PATH'],
                                                  reponame)
            with open(dfile) as datafile:
                for line in datafile:
                    # first line of the file contains
                    # the date of the last update
                    if line != '\n':
                        self.rdata['lupd'] = line.strip()
                    break

            if not datafile.closed:
                datafile.close()

        fname = 'SLACKBUILDS.TXT' if reponame == 'sbo' else 'PACKAGES.TXT'
        dfile = '{0}{1}/{2}'.format(self.spman_conf['REPOS_PATH'],
                                    reponame,
                                    fname)

        with open(dfile) as datafile:
            for line in datafile:
                if (not self.rdata['lupd'] and
                        line.startswith('PACKAGES.TXT;  ')):
                    self.rdata['lupd'] = line.split('; ')[1].strip()

        if not datafile.closed:
            datafile.close()

        return self.rdata

    def xxx(self):
        """
        docstring
        """
        pass
