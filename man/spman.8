.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SPMAN 8"
.TH "SPMAN" "8" "2018-08-06" "System" "Linux User Manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
spman \- powerful Slackware package manager
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
spman <param> [param[, param ...]]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Spman is a powerful Slackware package manager implemented on Python3
 and licensed under the \s-1MIT\s0 license.
.PP
Main futeares:
  \- check packages for upgrade
  \- download binary package or source code from allowed repositories
  \- download, build and install packages in the queue from SBo
    repository
  \- remove/upgrade packages in the current directory
  \- view the history of installing/updating/removing packages
  \- show list all dependencies for package from SBo repository
  \- view the contents of files included in SlackBuild archive from SBo
    repository
  \- search package from each enabled repository and view info
  \- show complete list of the packages in the repository
  \- search for problems with dependencies in the system packages using
    Slackware binary dependency checker (sbbdep) tool or ldd
  \- search for links to nonexistent files/dir in the specified
    directory
  \- check health installed packages
  \- search for *.new config files on the system
  \- commands autocompletion
.PP
Supported repositories:
.PP
.Vb 2
\&  Slackware (slack)
\&      http://ftp.osuosl.org/.2/slackware/
\&
\&  SlackBuilds.org (sbo)
\&      http://slackbuilds.org/slackbuilds/
\&
\&  Alien Bob (alienbob)
\&      http://bear.alienbase.nl/mirrors/people/alien/sbrepos/
\&
\&  Multilib (multilib)
\&      http://bear.alienbase.nl/mirrors/people/alien/multilib/
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-h\fR, \fB\-\-help\fR
    Print help message and exit.
.PP
\&\fB\-v\fR, \fB\-\-check\-version\fR
    Check program version for update.
.PP
\&\fB\-l\fR, \fB\-\-repolist\fR
    Print a list of all the repositories allowed in
    /etc/spman/repo\-list. Disconnected repositories are
    highlighted in red.
.PP
\&\fB\-r\fR, \fB\-\-repoinfo\fR
    Show information about all active repositories:
      \- name
      \- \s-1URL
      \-\s0 date of last update
      \- number of packages in the repository
      \- compressed packages size
      \- uncompressed packages size
.PP
\&\fB\-b\fR, \fB\-\-blacklist\fR
    Show blacklisted packages from /etc/spman/blacklist
.PP
\&\fB\-u\fR, \fB\-\-update\fR
    Update local data for all repositories. The paths to the log files
    and lists of packages are specified in /etc/spman/spman.conf
    By default:
        /var/log/spman/repo_name/ChangeLog.txt
        /var/lib/spman/repo_name/PACKAGES.TXT (or \s-1SLACKBUILDS.TXT\s0)
.PP
.Vb 1
\&        where repo_name: slack, sbo, alienbob or multilib
\&
\&    NOTE:
\&        You must run command \*(Aqspman \-\-update\*(Aq immediately after
\&        installing spman and configuring /etc/spman/spman.conf
.Ve
.PP
\&\fB\-t\fR, \fB\-\-health\fR
    Check the health of all installed packages on the system and
    display detailed information:
      \- total packages
      \- number of broken packages
      \- number of checked files
      \- number of missing files
      \- total health (%)
.PP
\&\fB\-w\fR, \fB\-\-new\-config\fR
    Search for *.new config files on the system.
.PP
\&\fB\-g\fR, \fB\-\-check\-upgrade\fR
    Check all installed packages for upgrade.
.PP
\&\fB\-d\fR, \fB\-\-download\fR \-\-pkg|\-\-src <reponame> <pkg>[ <pkg> ...]
    Download binary package(s) or source code from specified
    repository. Binary packages will be downloaded to the directory
    specified in the \s-1BUILD_PATH\s0 parameter from /etc/spman/spman.conf
    (default: /root/spman/build/). Source code and build scripts will
    be downloaded to BUILD_PATH/pkg_name/ directory.
.PP
.Vb 3
\&    NOTE:
\&        only \*(Aq\-\-pkg\*(Aq for reposytory \*(Aqmultilib\*(Aq
\&        only \*(Aq\-\-src\*(Aq for reposytory \*(Aqsbo\*(Aq
\&
\&    Examples:
\&        Download flashplayer\-plugin package from alienbob repository:
\&            # spman \-\-download \-\-pkg alienbob flashplayer\-plugin
\&            # ls \-1 /root/spman/build/
\&              flashplayer\-plugin\-30.0.0.134\-x86_64\-1alien.txz
\&
\&        Download emacs and kdelibs source code with SlackBuild script
\&        from standard Slackware repository:
\&            # spman \-\-download \-\-src slack emacs kdelibs
\&            # ls \-1 /root/spman/build/
\&              emacs/
\&              kdelibs/
.Ve
.PP
\&\fB\-m\fR, \fB\-\-upgrade\-pkgs\fR [\-\-only\-new]
    Install/Upgrade packages in the current directory.
.PP
.Vb 3
\&    \-\-only\-new
\&      Packages already installed on the system with the same name,
\&      version, build number and tag will not be reinstalled.
.Ve
.PP
\&\fB\-e\fR, \fB\-\-remove\-pkgs\fR
    If there are *.t?z packages in the current directory and they
    are installed, then these packages will be removed from the
    system.
.PP
\&\fB\-q\fR, \fB\-\-queue\fR \-\-add|\-\-remove|\-\-clear|\-\-show|\-\-install
    Download, build and install packages in the queue from
    SlackBuilds.org (sbo)
.PP
.Vb 5
\&    \-\-add <pkg>[ <pkg> ...]    \- add package(s) to the queue
\&    \-\-remove <pkg>[ <pkg> ...] \- remove package(s) from the queue
\&    \-\-clear                    \- clear queue
\&    \-\-show                     \- print queue
\&    \-\-install                  \- download, build and install packages
.Ve
.PP
\&\fB\-y\fR, \fB\-\-history\fR [\-\-update]
    View the history of installing/updating/removing packages.
.PP
.Vb 2
\&    \-\-update
\&      Update the installed packages database (reset history).
.Ve
.PP
\&\fB\-p\fR, \fB\-\-find\-deps\fR <pkg>
    Show list all dependencies for package from SlackBuilds.org (sbo)
    repository. The packages already installed in the system are
    highlighted in green.
.PP
\&\fB\-s\fR, \fB\-\-view\-slackbuild\fR <pkg>
    View the contents of files included in SlackBuild archive using
    pager: \s-1README,\s0 doinst.sh, patches, slack-desc, <pkg>.SlackBuild,
    <pkg>.info, etc.
.PP
\&\fB\-f\fR, \fB\-\-find\-pkg\fR [\-\-strict] <pattern>
    Search for package (case-insensitive) from each enabled
    repository and view info.
.PP
.Vb 2
\&    \-\-strict
\&      Strict match by package name.
.Ve
.PP
\&\fB\-i\fR, \fB\-\-pkglist\fR <reponame> [\-\-only\-installed]
    Show complete list of the packages on repository. The packages
    already installed in the system are highlighted in green.
.PP
.Vb 2
\&    \-\-only\-installed
\&      Show only installed packages.
.Ve
.PP
\&\fB\-k\fR, \fB\-\-check\-deps\fR \-\-sbbdep|\-\-ldd
    Search for problems with dependencies in the system packages.
.PP
.Vb 2
\&    \-\-sbbdep    \- using \*(Aqsbbdep\*(Aq tool
\&    \-\-ldd       \- using \*(Aqldd\*(Aq
.Ve
.PP
\&\fB\-a\fR, \fB\-\-bad\-links\fR <path_to_dir>
    Search for links to nonexistent files/dir in the specified
    directory.
.SH "FILES"
.IX Header "FILES"
General configuration file:
    /etc/spman/spman.conf
.PP
List of repositories:
    /etc/spman/repo\-list
.PP
List of blacklisted packages:
    /etc/spman/blacklist
.PP
Log files for each repository:
    /var/log/spman/<repo>/ChangeLog.txt
.PP
Lists of packages for each repository:
    /var/lib/spman/<repo>/PACKAGES.TXT (or \s-1SLACKBUILDS.TXT\s0)
.PP
List of installed packages
    /var/lib/spman/pkg\-db
    (generated by command 'spman \-\-history \-\-update')
.SH "AUTHOR"
.IX Header "AUTHOR"
Vladimir MyRequiem <mrvladislavovich@gmail.com>
.SH "HOMEPAGE"
.IX Header "HOMEPAGE"
https://github.com/MyRequiem/spman
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2018 Vladimir MyRequiem
