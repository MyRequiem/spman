#! /usr/bin/env python3
# -*- coding: utf-8 -*-

# findnewconfigs file is part of spman

# Copyright 2016 MyRequiem <mrvladislavovich@gmail.com>
# All rights reserved

# spman - Slackware package manager
# Home page: https://github.com/MyRequiem/spman

# Spman is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

"""
Find all '*.new' files from /etc/ and /usr/share/ folders and subfolders
"""

from os import (
    path,
    walk
)

from spman.maindata import MainData


class FindNewConfigs(object):
    """
    Find all '*.new' files from /etc/ and /usr/share/ folders and subfolders
    """
    def __init__(self):
        self.meta = MainData()
        self.newconfigs = []

    def start(self):
        """
        start find *.new files
        """
        for paths in ['/etc/', '/usr/share/']:
            '''
            os.walk(root_path) - directory tree generator.
            For each directory on root_path return a tuple:
            (path_for_dir, list_dirs_on_the_dir, list_files_on_the_dir)

            trash
            ├── dir1
            │   ├── dir2
            │   │   ├── dir3
            │   │   └── file3
            │   ├── file1
            │   └── file2
            └── dir4
                ├── dir5
                │   ├── file5
                │   └── file6
                └── file4

            >>> list(os.walk('trash'))
            [
                ('trash', ['dir1', 'dir4'], []),
                ('trash/dir1', ['dir2'], ['file2', 'file1']),
                ('trash/dir1/dir2', ['dir3'], ['file3']),
                ('trash/dir1/dir2/dir3', [], []),
                ('trash/dir4', ['dir5'], ['file4']),
                ('trash/dir4/dir5', [], ['file5', 'file6'])
            ]
            '''
            for root, dirs, files in walk(paths):
                del dirs
                for configname in files:
                    if (configname.endswith('.new') and
                            configname != 'titletoc.new'):
                        self.newconfigs.append(path.join(root, configname))

        self.print_new_files()

    def print_new_files(self):
        """
        Print *.new files
        """
        if not self.newconfigs:
            print('{0}No *.new configuration '
                  'files found.{1}'.format(self.meta.clrs['green'],
                                           self.meta.clrs['reset']))
        else:
            print('\n{0}Found *.new configuration '
                  'files:{1}'.format(self.meta.clrs['yellow'],
                                     self.meta.clrs['reset']))
            for newconfig in self.newconfigs:
                print('\t{0}'.format(newconfig))

            print()
