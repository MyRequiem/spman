#! /usr/bin/env python3
# -*- coding: utf-8 -*-

# queue.py file is part of spman

# Copyright 2016 MyRequiem <mrvladislavovich@gmail.com>
# All rights reserved

# spman - Slackware package manager
# Home page: https://github.com/MyRequiem/spman

# Spman is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

"""
Manage queue for 'sbo' repository
"""

from spman.maindata import MainData


class Queue(object):
    """
    Manage queue for 'sbo' repository
    """
    def __init__(self):
        self.meta = MainData()
        self.queue_file = '{0}queue'.format(
            self.meta.get_spman_conf()['QUEUE_PATH'])

    def clear(self):
        """
        clear queue
        """
        if not self.get_queue_list():
            print('File {0}{1}{2} is empty.'.format(self.meta.clrs['red'],
                                                    self.queue_file,
                                                    self.meta.clrs['reset']))
        else:
            open(self.queue_file, 'w').close()
            print('File {0}{1}{2} cleaned.'.format(self.meta.clrs['magenta'],
                                                   self.queue_file,
                                                   self.meta.clrs['reset']))

    def show(self):
        """
        print queue
        """

    def install(self):
        """
        download, build and install package(s) on the queue
        """
        print(self)

    def add(self, pkgs):
        """
        add package(s) in the queue
        """
        print(pkgs)
        print(self)

    def remove(self, pkgs):
        """
        remove package(s) from the queue
        """
        print(pkgs)
        print(self)

    def get_queue_list(self):
        """
        return list queue from queue file
        """
        queue_list = []
        with open(self.queue_file) as qfile:
            for line in qfile:
                if line != '\n':
                    queue_list.append(line.strip())

        if not qfile.closed:
            qfile.close()

        return queue_list
