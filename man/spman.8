.TH SPMAN 8 "2018\-04\-30" "System" "Linux User Manual"
.SH NAME
spman - powerful Slackware package manager
.SH SYNOPSIS
spman command [param[, param ...]]
.SH DESCRIPTION
Spman is a powerful Slackware package manager implemented on Python3
 and licensed under the MIT license.

Main futeares:
    - check packages for upgrade
    - download binary package or source code from allowed repositories
    - download, build and install package(s) in the queue from SBo
        repository
    - show list all dependencies for package from SBo repository
    - view the contents of files included in SlackBuild archive
    - search package from each enabled repository and view info
    - show complete list of the packages in the repository
    - search dependency problems in the system packages using
        Slackware binary dependency checker (sbbdep) tool
    - search for links to nonexistent files/dir in the specified
        directory
    - check health installed packages
    - search for *.new config files on the system
    - commands autocompletion

Supported repositories: Slackware, SBo, alien, multilib
.SH COMMANDS AND OPTIONS
The following commands and options are available:
.SS -h, --help
\fBPrint help message and exit.
.SS -v, --check-version
\fBCheck program version for update.
.SS -l, --repolist
\fbPrint a list of all the repositories allowed in /etc/spman/repo-list
 Disconnected repositories are highlighted in red.
.SS -r, --repoinfo
\fbShow information about all active repositories (name, URL, last update,
 total packages, compressed packages size, uncompressed packages size)
.SS -b, --blacklist
\fbShow blacklisted packages in /etc/spman/blacklist
.SS -u, --update
\fbUpdate local data for all repositories specified in /etc/spman/spman.conf
  By default:
    /var/lib/spman/repository_name  - PACKAGES.TXT or SLACKBUILDS.TXT
    /var/log/spman/repository_name  - ChangeLog.txt

\fbNOTE:
\fbYou must run this command immediately after installing spman and
 configuring /etc/spman/spman.conf
.SS -t, --health
\fbCheck health installed packages. Displayed detailed information about
 installed packages: total packages, number of broken packages,
 number of checked files, number of missing files, total health (%)
.SS -w, --new-config
\fbSearch for *.new config files on the system.
.SS -g, --check-upgrade
\fbCheck all installed packages for upgrade.
.SS -d, --download --pkg|--src reponame pkg1[ pkg2...]
\fbDownload binary package(s) or source code from specified repository
  Note: for reposytory 'multilib' only --pkg
        for reposytory 'sbo' only --src

\fbExamples:
    Download flashplayer-plugin package from alienbob repository:
      ~# spman --download --pkg alienbob flashplayer-plugin
    Download emacs and kdelibs source code with SlackBuild script
    from standard Slackware repository:
      ~# spman --download --src slack emacs kdelibs
.SS -q, --queue --add pkglist|--remove pkglist|--clear|--show|--install
\fbDownload, build and install package(s) in the queue from SlackBuilds.org
  Note: pkglist - list of names of packages
    --add pkglist           - add package(s) to the queue
    --remove pkglist        - remove package(s) from the queue
    --clear                 - clear queue
    --show                  - print queue
    --install               - download, build and install package(s)
.SS -p, --find-deps pkgname
\fbShow list all dependencies for package from 'sbo' repository.
 Installed packages are highlighted in green.
.SS -s, --view-slackbuild pkgname
\fbView the contents of files included in SlackBuild archive using pager
 (README, doinst.sh, patches, slack-desc, pkgname.SlackBuild,
  pkgname.info, etc.)
.SS -f, --find-pkg [--strict] pkgname
\fbSearch package from each enabled repository and view info
 (case-insensitive)
    --strict    - strict match by package name
.SS -i, --pkglist reponame [--only-installed]
\fbShow complete list of the packages on repository. Installed packages are
 highlighted in green.
    --only-installed    - output only installed packages
.SS -k, --check-deps --sbbdep|--ldd
\fbSearch dependency problems in the system packages.
    --sbbdep       - using 'sbbdep' tool
    --ldd          - using 'ldd' tool
.SS -a, --bad-links /path/to/dir
\fbSearch for links to nonexistent files/dir in the specified directory.

.SH DEFAULT REPOSITORIES
 Slackware.com = "slack"
 SlackBuilds.org = "sbo"
 Alien's = "alienbob"
 Alien's multilib = "multilib"
.SH FILES
/etc/spman/spman.conf
  General configuration of spman

/etc/spman/repo-list
  Configuration file for repositories

/etc/spman/blacklist
  List of packages to skip

/var/log/spman
  ChangeLog.txt repositories files

/var/lib/spman
  PACKAGES.TXT files
  SLACKBUILDS.TXT files
.SH AUTHOR
Vladimir MyRequiem <mrvladislavovich@gmail.com>
.SH HOMEPAGE
https://github.com/MyRequiem/spman
.SH COPYRIGHT
Copyright\(co 2018 Vladimir MyRequiem
