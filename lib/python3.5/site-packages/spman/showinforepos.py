#! /usr/bin/env python3
# -*- coding: utf-8 -*-

# showinforepos file is part of spman

# Copyright 2016 MyRequiem <mrvladislavovich@gmail.com>
# All rights reserved

# spman - Slackware package manager
# Home page: https://github.com/MyRequiem/spman

# Spman is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

"""
Show information about all repositories.
"""

from spman.maindata import MainData
from spman.getrepodata import GetRepoData
from spman.utils import get_indent


class ShowInfoRepos(object):
    """
    Show information about all repositories.
    """
    def __init__(self):
        self.meta = MainData()

    def start(self):
        """
        init show information
        """
        repos = self.meta.get_repo_dict()
        for repo in sorted(repos):
            rdata = GetRepoData(repo).start()
            print('============= ' + repo + ' =============')
            optname = 'URL:'
            print('{0} {1}{2}'.format(optname,
                                      get_indent(len(optname), 22),
                                      self.meta.get_repo_dict()[repo]))
            print('Last updated: {0}'.format(rdata['lupd']))
            print('Number of packages: {0}'.format(rdata['numpkgs']))
            if repo != 'sbo':
                print(('Compressed packages: {0}').format(rdata['comp']))
                print(('Uncompressed packages: {0}').format(rdata['uncomp']))

            if repo == 'slack':
                print('bind')
                print(rdata['pkgs']['bind'])
            elif repo == 'multilib':
                print('gcc')
                print(rdata['pkgs']['gcc'])
            elif repo == 'alienbob':
                print('armory')
                print(rdata['pkgs']['armory'])
            elif repo == 'sbo':
                print('mit-scheme')
                print(rdata['pkgs']['mit-scheme'])

            print()

    def asdf(self):
        """
        docstring
        """
        print(self)
