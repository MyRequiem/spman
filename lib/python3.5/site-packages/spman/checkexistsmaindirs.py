#! /usr/bin/env python3
# -*- coding: utf-8 -*-

# checkexistsmaindirs.py file is part of spman

# Copyright 2016 MyRequiem <mrvladislavovich@gmail.com>
# All rights reserved

# spman - Slackware package manager
# Home page: https://github.com/MyRequiem/spman

# Spman is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

"""
check exists dirs and files from /etc/spman/spman.conf
"""

import os

from spman.maindata import MainData


def check_exists_main_dirs():
    """
    check exists dirs and files from /etc/spman/spman.conf
    """
    maindata = MainData()

    # dict {repo_name: url, ...}
    repos = maindata.get_repo_dict()
    # dict {opt_name: value, ...}
    spman_conf = maindata.get_spman_conf()

    for opt_name in spman_conf:
        value = spman_conf[opt_name]
        # if option is the path and path not exist
        if value.startswith('/') and not os.path.exists(value):
            os.makedirs(value)

        if opt_name == 'REPOS_PATH' or opt_name == 'LOGS_PATH':
            for repo in repos:
                if not os.path.exists(value + repo):
                    os.makedirs(value + repo)

    queue = spman_conf['QUEUE_PATH'] + 'queue'
    if not os.path.isfile(queue):
        open(queue, 'w').close()

    # if not exists PACKAGES.TXT, SLACKBUILDS.TXT or ChangeLog.txt
    # for one of the repositories
    for repo in repos:
        pkg_file = 'SLACKBUILDS.TXT' if repo == 'sbo' else 'PACKAGES.TXT'
        pkg_exist = os.path.isfile('{0}{1}/{2}'.format(spman_conf['REPOS_PATH'],
                                                       repo,
                                                       pkg_file))
        log_exist = os.path.isfile('{0}{1}/ChangeLog.txt'.format(
            spman_conf['LOGS_PATH'], repo))

        if not pkg_exist or not log_exist:
            print(('{0}For some repositories missing files PACKAGES.TXT, '
                   'SLACKBUILDS.txt or ChangeLog.txt\n{1}\'spman -u\' or '
                   '\'spman --update\' for update '
                   'libraries.{2}').format(maindata.clrs['red'],
                                           maindata.clrs['grey'],
                                           maindata.clrs['reset']))
            raise SystemExit
